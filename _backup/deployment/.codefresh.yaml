version: "1.0"
stages:
  - "clone"
  - "build"
  - "integration"
  - "push"
  - "provisioning"
  - "deployment"
steps:
  clone:
    type: "git-clone"
    description: "Cloning main repository..."
    repo: "animeshon/encyclopedia-frontend"
    revision: "${{CF_BRANCH}}"
    stage: "clone"
  nextjs_build:
    title: "Building Docker Image"
    type: "build"
    image_name: "animeshon/encyclopedia-frontend-nextjs"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "Dockerfile"
    registry: "us-spider-tier-0"
    working_directory: "${{clone}}"
    stage: "build"
  nginx_build:
    title: "Building Docker Image"
    type: "build"
    image_name: "animeshon/encyclopedia-frontend-nginx"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "Dockerfile"
    registry: "us-spider-tier-0"
    working_directory: "${{clone}}/nginx"
    stage: "build"
  nextjs_push:
    title: "Pushing image to Google Cloud Registry"
    type: "push"
    stage: "build"
    image_name: "encyclopedia-frontend-nextjs"
    registry: "us-spider-tier-0"
    candidate: "${{nextjs_build}}"
    tags:
      - "${{CF_BRANCH_TAG_NORMALIZED}}"
      - "${{CF_REVISION}}"
      - "latest"
  nginx_push:
    title: "Pushing image to Google Cloud Registry"
    type: "push"
    stage: "build"
    image_name: "encyclopedia-frontend-nginx"
    registry: "us-spider-tier-0"
    candidate: "${{nginx_build}}"
    tags:
      - "${{CF_BRANCH_TAG_NORMALIZED}}"
      - "${{CF_REVISION}}"
      - "latest"
  prepare_plan:
    image: "alpine:3.9"
    title: "Setting up Terraform CLI"
    stage: "provisioning"
    working_directory: "${{clone}}"
    commands:
      - "./terraform/setup.sh"
  deploy:
    image: "hashicorp/terraform:0.12.29"
    title: "Executing Terraform provisioning"
    stage: "provisioning"
    working_directory: "${{clone}}/terraform"
    commands:
      - "terraform init"
      - "terraform apply -auto-approve" 
  gcloud_credentials:
    title: "Authenticating to kubernetes via gcloud command"
    image: "google/cloud-sdk:303.0.0-alpine"
    stage: "deployment"
    environment:
      - "KUBECONFIG=/codefresh/volume/kubectl"
    commands:
      - "echo ${{KUBERNETES_CREDENTIALS}} | base64 -d > ${{GOOGLE_APPLICATION_CREDENTIALS}}"
      - "gcloud config set container/use_application_default_credentials True"
      - "gcloud auth activate-service-account --key-file ${{GOOGLE_APPLICATION_CREDENTIALS}}"
      - "gcloud container clusters get-credentials ${{KUBERNETES_CLUSTER}} --region ${{KUBERNETES_REGION}} --project ${{GCP_PROJECT}}"
  helm_install:
    title: "Installing or upgrading the Helm chart"
    image: "alpine/helm:3.2.3"
    stage: "deployment"
    working_directory: "${{clone}}"
    environment:
      - "KUBECONFIG=/codefresh/volume/kubectl"
    commands:
      - "helm upgrade --install --values ./helm/values.yaml encyclopedia-frontend ./helm/encyclopedia-frontend --set nextjs.image.tag=${{CF_REVISION}} --set nginx.image.tag=${{CF_REVISION}} --namespace animeshon"
  kubernetes_apply:
    title: "Applying Kubernetes configurations"
    image: "bitnami/kubectl:1.17"
    stage: "deployment"
    working_directory: "${{clone}}"
    environment:
      - "KUBECONFIG=/codefresh/volume/kubectl"
    commands:
      - "kubectl apply -f istio/"
